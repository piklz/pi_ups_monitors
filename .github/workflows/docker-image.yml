name: Docker Image CI - Native ARM64 Only

on:
  release:
    types: [published]

jobs:
  build_and_publish:
    # 🛠️ New: Use the native ARM64 runner directly
    #runs-on: ubuntu-22.04-arm64
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4

    # ❌ QEMU is removed because the runner is native ARM64 YAY !

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Define image tags
      id: vars
      run: |
        # GITHUB_REF_NAME is the full tag (e.g., image/v1.2.3)
        FULL_TAG=${GITHUB_REF_NAME}
        
        # Strip the 'image/' prefix for the clean Docker tag (e.g., v1.2.3)
        VERSION_TAG=$(echo $FULL_TAG | sed 's/image\///')
        
        # Get the short commit SHA (e.g., 2f6c9d0)
        SHORT_SHA=$(git rev-parse --short HEAD)
        
        REPO_NAME="piklz/presto_x728"
        
        # Define the three tags using the cleaned-up VERSION_TAG
        # 1. Human Tag: piklz/presto_x728:v1.2.3
        # 2. Immutable Tag: piklz/presto_x728:v1.2.3-g2f6c9d0
        # 3. Latest Tag: piklz/presto_x728:latest
        DOCKER_TAGS="${REPO_NAME}:${VERSION_TAG},${REPO_NAME}:${VERSION_TAG}-g${SHORT_SHA},${REPO_NAME}:latest"
        
        echo "DOCKER_TAGS=${DOCKER_TAGS}" >> $GITHUB_OUTPUT
        
    - name: Build and push the image
      uses: docker/build-push-action@v5
      with:
        push: true 
        context: ./docker 
        # 🛠️ Only target the ARM64 platform
        platforms: linux/arm64 
        tags: ${{ steps.vars.outputs.DOCKER_TAGS }}
        no-cache: true  # 🛠️ Added to force rebuild and bypass cache
