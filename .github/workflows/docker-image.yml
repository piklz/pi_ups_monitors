name: Docker Image CI

on:
  # Triggers the workflow on push or pull request events to the 'main' branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_publish:
    # Use a specific runner environment
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository code
    - uses: actions/checkout@v4
      
    # Step 2: Set up QEMU for multi-arch builds (recommended for Raspberry Pi images)
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    # Step 3: Set up Docker Buildx (allows building multi-arch images)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Step 4: Log in to Docker Hub using secrets
    # You MUST create secrets named DOCKER_USERNAME and DOCKER_PASSWORD in your GitHub repository settings.
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    # Define variables for easy reuse
    - name: Define variables
      id: vars
      run: |
        echo "TAG=latest" >> $GITHUB_OUTPUT
        echo "REPO=piklz/presto_x728" >> $GITHUB_OUTPUT

    # Step 5: Build and Push the Docker image
    - name: Build and push the image
      uses: docker/build-push-action@v5
      with:
        # Pushes to Docker Hub
        push: true 
        # Sets the directory for the build context (where the Dockerfile is located)
        context: ./docker 
        # Specifies the output tag
        tags: ${{ steps.vars.outputs.REPO }}:${{ steps.vars.outputs.TAG }}
        # Defines the architecture for the image (useful for Pi)
        platforms: linux/arm64,linux/arm/v7
